
SELECT TABLE_NAME 
FROM USER_TABLES 
WHERE TABLE_NAME LIKE 'JO%'; 


SELECT SUBSTR(FIRST_NAME, 0, 1) || ' ' || LAST_NAME AS "EMPLOYEE NAMES" 
FROM EMPLOYEES;


SELECT FIRST_NAME || ' ' || LAST_NAME AS "EMPLOYEE NAME", EMAIL AS "EMAIL" 
FROM EMPLOYEES 
WHERE EMAIL LIKE '%IN%'; 


SELECT MIN(LAST_NAME) "FIRST LAST NAME", MAX(LAST_NAME) "LAST LAST NAME"  
FROM EMPLOYEES;


SELECT '$' || ROUND(SALARY * 7/30, 2) "WEEKLY SALARY" 
FROM EMPLOYEES 
WHERE SALARY * 7/30 BETWEEN 700 AND 3000; 


SELECT SUBSTR(FIRST_NAME, 0, 1) || ' ' || LAST_NAME "EMPLOYEE NAMES", JOB_TITLE "JOB" 
FROM EMPLOYEES JOIN JOBS USING(JOB_ID) 
ORDER BY JOB_TITLE; 


SELECT SUBSTR(FIRST_NAME, 0, 1) || ' ' || LAST_NAME "EMPLOYEE NAME", JOB_TITLE "JOB", 
        MIN_SALARY || ' - ' || MAX_SALARY "SALARY RANGE", 
        SALARY  
FROM EMPLOYEES JOIN JOBS USING(JOB_ID) 
ORDER BY JOB_TITLE; 


SELECT SUBSTR(FIRST_NAME, 0, 1) || ' ' || LAST_NAME "EMPLOYEE NAME", DEPARTMENT_NAME 
FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID, MANAGER_ID); 


SELECT SUBSTR(FIRST_NAME, 0, 1) || ' ' || LAST_NAME "EMPLOYEE NAME", DEPARTMENT_NAME 
FROM EMPLOYEES JOIN DEPARTMENTS USING(DEPARTMENT_ID); 


SELECT DECODE(MANAGER_ID, NULL, 'Nobody', 'Somebody') "WORKS FOR", LAST_NAME 
FROM EMPLOYEES; 


SELECT SUBSTR(FIRST_NAME, 0, 1) || ' ' || LAST_NAME "EMPLOYEE NAME", SALARY, 
        DECODE(COMMISSION_PCT, NULL, 'No', 'Yes') COMMISSION 
FROM EMPLOYEES; 


SELECT LAST_NAME, DEPARTMENT_NAME, CITY, STATE_PROVINCE 
FROM DEPARTMENTS  
        LEFT OUTER JOIN EMPLOYEES ON DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID 
        JOIN LOCATIONS ON DEPARTMENTS.LOCATION_ID = LOCATIONS.LOCATION_ID
ORDER BY LAST_NAME; 


SELECT FIRST_NAME, LAST_NAME, 
        DECODE(COMMISSION_PCT, NULL, DECODE(MANAGER_ID, NULL, -1, MANAGER_ID), COMMISSION_PCT) "WHICH FUNCTION???"
FROM EMPLOYEES; 


SELECT LAST_NAME, SALARY, GRADE_LEVEL 
FROM EMPLOYEES, JOB_GRADES 
WHERE DEPARTMENT_ID > 50 AND SALARY BETWEEN LOWEST_SAL AND HIGHEST_SAL; 


SELECT LAST_NAME, DEPARTMENT_NAME 
FROM EMPLOYEES FULL JOIN DEPARTMENTS ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID; 


SELECT LEVEL POSITION, LAST_NAME, PRIOR LAST_NAME 
FROM EMPLOYEES 
START WITH EMPLOYEE_ID = 100 
CONNECT BY PRIOR EMPLOYEE_ID = MANAGER_ID; 


SELECT MIN(HIRE_DATE) LOWEST, MAX(HIRE_DATE) HIGHEST, COUNT(*) "NO OF EMPLOYEES" 
FROM EMPLOYEES; 


WITH SALARY_SUM AS( 
SELECT DEPARTMENT_ID, SUM(SALARY) SALARIES 
FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID) 
SELECT DEPARTMENT_NAME, SALARIES 
FROM DEPARTMENTS JOIN SALARY_SUM USING(DEPARTMENT_ID) 
WHERE SALARIES BETWEEN 15000 AND 31000 
ORDER BY SALARIES; 


WITH SALARY_AVG AS( 
SELECT DEPARTMENT_ID, TRUNC(AVG(SALARY), 0) AVG_SAL 
FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID) 
SELECT D.DEPARTMENT_NAME, D.MANAGER_ID, E.LAST_NAME MANAGER_NAME, AVG_SAL 
FROM DEPARTMENTS D JOIN SALARY_AVG ON D.DEPARTMENT_ID = SALARY_AVG.DEPARTMENT_ID  
JOIN EMPLOYEES E ON D.MANAGER_ID= E.EMPLOYEE_ID 
ORDER BY AVG_SAL; 


WITH ROUND_AVG AS( 
SELECT ROUND(AVG(SALARY), 0) AVG_SAL 
FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID) 
SELECT MAX(AVG_SAL) HIGHEST_AVG_SAL 
FROM ROUND_AVG; 


WITH SALARY_SUM AS( 
SELECT DEPARTMENT_ID, SUM(SALARY) SUM_SALARY 
FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID) 
SELECT DEPARTMENT_NAME, SUM_SALARY 
FROM DEPARTMENTS JOIN SALARY_SUM USING(DEPARTMENT_ID) 
ORDER BY SUM_SALARY; 


WITH RES AS (SELECT DEPARTMENT_ID, JOB_ID, SUM(SALARY) MONTH_COST 
FROM EMPLOYEES 
WHERE DEPARTMENT_ID IS NOT NULL 
GROUP BY GROUPING SETS((DEPARTMENT_ID, JOB_ID), DEPARTMENT_ID, ()) 
) 
SElECT DEPARTMENT_NAME, JOB_ID, MONTH_COST 
FROM RES LEFT JOIN DEPARTMENTS USING(DEPARTMENT_ID) 
ORDER BY DEPARTMENT_NAME, JOB_ID; 


WITH RES AS (SELECT DEPARTMENT_ID, JOB_ID, SUM(SALARY) MONTH_COST, GROUPING(DEPARTMENT_ID) GROUP_DEPT, GROUPING(JOB_ID) GROUP_JOB
FROM EMPLOYEES 
WHERE DEPARTMENT_ID IS NOT NULL 
GROUP BY CUBE(DEPARTMENT_ID, JOB_ID) 
) 
SElECT DEPARTMENT_NAME, JOB_ID, MONTH_COST, DECODE(GROUP_DEPT, 0, 'YES', 'NO') GROUP_DEPT, DECODE(GROUP_JOB, 0, 'YES', 'NO') GROUP_JOB 
FROM RES LEFT JOIN DEPARTMENTS USING(DEPARTMENT_ID) 
ORDER BY DEPARTMENT_NAME, JOB_ID; 


WITH 
RES AS (
    SELECT E.DEPARTMENT_ID, E.JOB_ID, D.LOCATION_ID, E.SALARY
    FROM EMPLOYEES E, DEPARTMENTS D
    WHERE E.DEPARTMENT_ID IS NOT NULL AND E.DEPARTMENT_ID = D.DEPARTMENT_ID
),
SETS_RES AS(
    SELECT DEPARTMENT_ID, JOB_ID, LOCATION_ID, SUM(SALARY) SAL
    FROM RES
    GROUP BY GROUPING SETS((DEPARTMENT_ID, JOB_ID), LOCATION_ID)
)
SElECT D.DEPARTMENT_NAME, SETS_RES.JOB_ID, L.CITY, SETS_RES.SAL
FROM SETS_RES 
    LEFT JOIN DEPARTMENTS D ON SETS_RES.DEPARTMENT_ID = D.DEPARTMENT_ID
    LEFT JOIN LOCATIONS L ON SETS_RES.LOCATION_ID = L.LOCATION_ID
ORDER BY D.DEPARTMENT_NAME, L.CITY, SETS_RES.SAL DESC;


SELECT SUBSTR(FIRST_NAME, 0, 1) || ' ' || LAST_NAME EMPLOYEE_NAME, DEPARTMENT_ID, NULL, NULL
FROM EMPLOYEES
UNION
SELECT NULL, DEPARTMENT_ID, DEPARTMENT_NAME, NULL
FROM DEPARTMENTS
UNION
SELECT NULL, NULL, NULL, CITY
FROM LOCATIONS;


WITH SALARY_AVG AS(
SELECT DEPARTMENT_ID, TRUNC(AVG(SALARY), 0) AVG_SAL
FROM EMPLOYEES
WHERE DEPARTMENT_ID IS NOT NULL
GROUP BY DEPARTMENT_ID)
SELECT SUBSTR(FIRST_NAME, 0, 1) || ' ' || LAST_NAME EMPLOYEE_NAME, SALARY, DEPARTMENT_NAME
FROM SALARY_AVG S JOIN DEPARTMENTS D ON S.DEPARTMENT_ID = D.DEPARTMENT_ID JOIN EMPLOYEES E ON S.DEPARTMENT_ID = E.DEPARTMENT_ID
WHERE E.DEPARTMENT_ID = S.DEPARTMENT_ID AND E.SALARY > S.AVG_SAL;